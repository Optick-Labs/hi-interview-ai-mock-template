// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL_HI")
}

enum MessageType {
    QUESTION
    ANSWER
}

model User {
    id             String         @id @default(uuid())
    name           String
    email          String         @unique
    image          String?
    createdAt      DateTime       @default(now())
    updatedAt      DateTime       @updatedAt
    conversations  Conversation[]
    evaluations    Evaluation[]
    companyId      String?
    company        Company?       @relation(fields: [companyId], references: [id])
}

model Company {
    id        String   @id @default(uuid())
    name      String
    logo      String?
    users     User[]
    Interviews Interview[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Interview {
    id        String   @id @default(uuid())
    name      String
    userId    String
    companyId String
    company   Company  @relation(fields: [companyId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    conversations Conversation[]
}

model Conversation {
    id          String      @id @default(uuid())
    content     String
    type        MessageType
    sessionId   String
    userId      String
    user        User        @relation(fields: [userId], references: [id])
    evaluation  Evaluation?
    interviewId String
    interview   Interview   @relation(fields: [interviewId], references: [id])
    timestamp   DateTime    @default(now())
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
}

model Evaluation {
    id             String       @id @default(uuid())
    score          Int
    feedback       String
    conversationId String       @unique
    conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
    userId         String
    user           User         @relation(fields: [userId], references: [id])
    createdAt      DateTime     @default(now())
    updatedAt      DateTime     @updatedAt
}
